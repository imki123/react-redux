{"version":3,"sources":["components/Counter.js","apis/checkNumber.js","modules/counter.js","containers/CounterContainer.js","App.js","modules/index.js","index.js"],"names":["Counter","props","number","onSetDiff","diff","onIncreaseThunk","onDecreaseThunk","onIncreaseSaga","onDecreaseSaga","onCheck","onInit","checkResult","className","onChange","value","onClick","sleep","n","Promise","resolve","reject","setTimeout","checkNumber","a","isNaN","increaseSaga","decreaseSaga","watchSaga","INIT","SET_DIFF","INCREASE","DECREASE","INCREASE_ASYNC","DECREASE_ASYNC","CHECK_NUMBER_SUCCESS","increase","type","decrease","delay","put","takeEvery","takeLatest","initialState","CounterContainer","useSelector","state","counter","dispatch","useDispatch","e","Number","setDiff","target","getState","console","log","error","App","rootSaga","rootReducer","combineReducers","action","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","logger","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f98a30.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./Counter.scss\"\r\n\r\nfunction Counter(props) {\r\n  const {\r\n    number,\r\n    onSetDiff,\r\n    diff,\r\n    onIncreaseThunk,\r\n    onDecreaseThunk,\r\n    onIncreaseSaga,\r\n    onDecreaseSaga,\r\n    onCheck,\r\n    onInit,\r\n    checkResult,\r\n  } = props\r\n\r\n  return (\r\n    <div className='counter'>\r\n      <div className='number'>Number : {number}</div>\r\n      <div>\r\n        diff : <input onChange={onSetDiff} value={diff}></input>\r\n      </div>\r\n      <div>\r\n        <span> use Thunk : </span>\r\n        <button onClick={onIncreaseThunk}>+ (Thunk)</button>&nbsp;\r\n        <button onClick={onDecreaseThunk}>- (Thunk)</button>&nbsp;<br/>\r\n        <button onClick={onCheck}>Number가 3 이상인가?</button> <b>{checkResult ? \"True\" : \"False\"}</b>\r\n      </div>\r\n      <div>\r\n        <span> use Saga : </span>\r\n        <button onClick={onIncreaseSaga}>+ (Saga)</button>&nbsp;\r\n        <button onClick={onDecreaseSaga}>- (Saga)</button>&nbsp;\r\n      </div>\r\n      <div>\r\n        \r\n      </div>\r\n      <button onClick={onInit}>초기화</button>\r\n    </div>\r\n  )\r\n}\r\nexport default Counter\r\n","const sleep = (n) => new Promise((resolve, reject) => setTimeout(resolve, n))\r\n\r\nexport const checkNumber = async number => { //넘버를 체크해서 프라미스를 리턴\r\n  await sleep(1000) //1초 쉬고\r\n  return new Promise((resolve, reject) => { \r\n    if(isNaN(number)) reject(`${number} is NaN`)\r\n    if(number >= 3) resolve(true)\r\n    else resolve(false)\r\n  })\r\n}","import {checkNumber} from \"../apis/checkNumber\"\r\nimport {delay, put, takeEvery, takeLatest} from \"redux-saga/effects\"\r\n\r\n/* 액션 타입 */\r\nconst INIT = \"counter/INIT\"\r\nconst SET_DIFF = \"counter/SET_DIFF\"\r\nconst INCREASE = \"counter/INCREASE\"\r\nconst DECREASE = \"counter/DECREASE\"\r\nconst INCREASE_ASYNC = \"counter/INCREASE_ASYNC\"\r\nconst DECREASE_ASYNC = \"counter/DECREASE_ASYNC\"\r\n\r\n/* 숫자체크하기 프라미스 */\r\nconst CHECK_NUMBER = \"counter/CHECK_NUMBER\"\r\nconst CHECK_NUMBER_SUCCESS = \"counter/CHECK_NUMBER_SUCCESS\"\r\nconst CHECK_NUMBER_ERROR = \"counter/CHECK_NUMBER_ERROR\"\r\n\r\n/* 액션 생성함수 */\r\nexport const init = () => ({ type: INIT })\r\nexport const setDiff = (diff) => ({\r\n  type: SET_DIFF,\r\n  diff: isNaN(Number(diff)) ? 0 : Number(diff),\r\n})\r\nexport const increase = () => ({ type: INCREASE })\r\nexport const decrease = () => ({ type: DECREASE })\r\nexport const increaseAsync = () => ({ type: INCREASE_ASYNC })\r\nexport const decreaseAsync = () => ({ type: DECREASE_ASYNC })\r\n\r\n//1초 후에 디스패치하는 thunk 함수\r\nexport const increaseThunk = () => (dispatch) => {\r\n  setTimeout(() => dispatch(increase()), 1000)\r\n}\r\nexport const decreaseThunk = () => (dispatch) => {\r\n  setTimeout(() => dispatch(decrease()), 1000)\r\n}\r\nexport const checkNumberThunk = () => async (dispatch, getState) => {\r\n  dispatch({ type: CHECK_NUMBER })\r\n  try {\r\n    console.log(getState())\r\n    const checkResult = await checkNumber(getState().counter.number)\r\n    dispatch({ type: CHECK_NUMBER_SUCCESS, checkResult })\r\n  } catch (error) {\r\n    dispatch({ type: CHECK_NUMBER_ERROR, error })\r\n  }\r\n}\r\n\r\n\r\n//1초 후에 디스패치하는 사가 제너레이터\r\nfunction* increaseSaga(){\r\n  yield delay(1000) //1초 딜레이\r\n  yield put(increase()) //리듀서에 increase 액션 put(디스패치)(실행)\r\n}\r\nfunction* decreaseSaga(){\r\n  yield delay(1000) //1초 딜레이\r\n  yield put(decrease()) //리듀서에 increase 액션 put(디스패치)(실행)\r\n}\r\n\r\n//사가 제너레이터를 감시하는 watchSaga\r\nexport function* watchSaga(){\r\n  //takeEvery(액션타입, 사가)\r\n  yield takeEvery(INCREASE_ASYNC, increaseSaga) //INCREASE_ASYNC액션이 발생하면 increaseSaga 실행\r\n  yield takeLatest(DECREASE_ASYNC, decreaseSaga) //DECREASE_ASYNC액션 처리 중 마지막 액션만 처리함.\r\n}\r\n\r\n\r\n\r\n\r\n/* 초기상태 */\r\nconst initialState = {\r\n  number: 0,\r\n  diff: 1,\r\n  checkResult: null,\r\n}\r\n\r\n/* 리듀서 */\r\nexport default function counter(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INIT:\r\n      return initialState\r\n    case SET_DIFF:\r\n      return {\r\n        ...state,\r\n        diff: action.diff,\r\n      }\r\n    case INCREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number + state.diff,\r\n      }\r\n    case DECREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number - state.diff,\r\n      }\r\n    case CHECK_NUMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        checkResult: action.checkResult,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Counter from \"../components/Counter\"\r\nimport {\r\n  checkNumberThunk,\r\n  decreaseAsync,\r\n  decreaseThunk,\r\n  increaseAsync,\r\n  increaseThunk,\r\n  init,\r\n  setDiff,\r\n} from \"../modules/counter\"\r\n\r\nfunction CounterContainer() {\r\n  const { number } = useSelector((state) => ({ number: state.counter.number })) //rootReducer.counter.number\r\n  const { diff } = useSelector((state) => ({ diff: state.counter.diff }))\r\n  const { checkResult } = useSelector((state) => ({\r\n    checkResult: state.counter.checkResult,\r\n  }))\r\n\r\n  const dispatch = useDispatch()\r\n  const onIncreaseThunk = () => dispatch(increaseThunk())\r\n  const onDecreaseThunk = () => dispatch(decreaseThunk())\r\n  const onIncreaseSaga = () => dispatch(increaseAsync())\r\n  const onDecreaseSaga = () => dispatch(decreaseAsync())\r\n  const onCheck = () => dispatch(checkNumberThunk())\r\n  const onSetDiff = (e) => dispatch(setDiff(e.target.value))\r\n  const onInit = () => dispatch(init())\r\n\r\n  return (\r\n    <Counter\r\n      number={number}\r\n      onSetDiff={onSetDiff}\r\n      diff={diff}\r\n      onIncreaseThunk={onIncreaseThunk}\r\n      onDecreaseThunk={onDecreaseThunk}\r\n      onIncreaseSaga={onIncreaseSaga}\r\n      onDecreaseSaga={onDecreaseSaga}\r\n      onCheck={onCheck}\r\n      onInit={onInit}\r\n      checkResult={checkResult}\r\n    />\r\n  )\r\n}\r\nexport default CounterContainer\r\n","import './App.css';\nimport CounterContainer from './containers/CounterContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <CounterContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\"\r\nimport { all } from \"redux-saga/effects\"\r\nimport counter, { watchSaga } from './counter'\r\n\r\nconst rootReducer = combineReducers({\r\n  counter,\r\n})\r\nexport default rootReducer\r\n\r\nexport function* rootSaga(){\r\n  yield all([watchSaga()])\r\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { applyMiddleware, createStore } from \"redux\"\nimport rootReducer, { rootSaga } from \"./modules/index\"\nimport { Provider } from \"react-redux\"\nimport { composeWithDevTools } from \"redux-devtools-extension\" // 리덕스 개발자 도구\nimport logger from \"redux-logger\"\nimport ReduxThunk from \"redux-thunk\"\nimport createSagaMiddleware from \"redux-saga\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk, sagaMiddleware, logger))\n) // 스토어를 만듭니다.\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}