{"version":3,"sources":["apis/checkNumber.js","modules/counter.js","containers/CounterContainer.js","App.js","modules/index.js","index.js"],"names":["sleep","n","Promise","resolve","reject","setTimeout","checkNumber","number","a","isNaN","INIT","SET_DIFF","INCREASE","DECREASE","CHECK_NUMBER_SUCCESS","increaseAsync","dispatch","type","decreaseAsync","initialState","diff","checkResult","CounterContainer","useSelector","state","counter","useDispatch","className","style","fontSzie","fontWeight","onChange","e","Number","setDiff","target","value","onClick","getState","console","log","error","App","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAMA,EAAQ,SAACC,GAAD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAAV,OAAqBC,WAAWF,EAASF,OAE7DK,EAAW,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACnBR,EAAM,KADa,gCAElB,IAAIE,SAAQ,SAACC,EAASC,GACxBK,MAAMF,IAASH,EAAO,GAAD,OAAIG,EAAJ,YACRJ,EAAbI,GAAU,OAJU,2CAAH,sDCClBG,EAAO,eACPC,EAAW,mBACXC,EAAW,mBACXC,EAAW,mBAIXC,EAAuB,+BAahBC,EAAgB,kBAAM,SAACC,GAClCX,YAAW,kBAAMW,EALY,CAAEC,KAAML,MAKE,OAE5BM,EAAgB,kBAAM,SAACF,GAClCX,YAAW,kBAAMW,EAPY,CAAEC,KAAMJ,MAOE,OAcnCM,EAAe,CACnBZ,OAAQ,EACRa,KAAM,EACNC,YAAa,MCRAC,MAhCf,WAA6B,IACnBf,EAAWgB,aAAY,SAACC,GAAD,MAAY,CAAEjB,OAAQiB,EAAMC,QAAQlB,WAA3DA,OACAa,EAASG,aAAY,SAACC,GAAD,MAAY,CAAEJ,KAAMI,EAAMC,QAAQL,SAAvDA,KACAC,EAAgBE,aAAY,SAACC,GAAD,MAAY,CAAEH,YAAaG,EAAMC,QAAQJ,gBAArEA,YAEFL,EAAWU,cASjB,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKC,MAAO,CAAEC,SAAU,OAAQC,WAAY,QAA5C,sBACYvB,KAEZ,0CACS,uBAAOwB,SATF,SAACC,GAAD,OAAOhB,EDAJ,SAACI,GAAD,MAAW,CAChCH,KAAMN,EACNS,KAAMX,MAAMwB,OAAOb,IAAS,EAAIa,OAAOb,ICFLc,CAAQF,EAAEG,OAAOC,SASVA,MAAOhB,OAE5C,2DAC2BC,EAAc,OAAS,WAElD,wBAAQgB,QAjBO,kBAAMrB,EAASD,MAiB9B,eAVF,OAWE,wBAAQsB,QAjBO,kBAAMrB,EAASE,MAiB9B,eAXF,OAYE,wBAAQmB,QAjBI,kBAAMrB,EDeQ,uCAAM,WAAOA,EAAUsB,GAAjB,eAAA9B,EAAA,6DACpCQ,EAAS,CAAEC,KArBQ,yBAoBiB,SAGlCsB,QAAQC,IAAIF,KAHsB,SAIRhC,EAAYgC,IAAWb,QAAQlB,QAJvB,OAI5Bc,EAJ4B,OAKlCL,EAAS,CAAEC,KAAMH,EAAsBO,gBALL,gDAOlCL,EAAS,CAAEC,KAzBY,6BAyBcwB,MAAK,OAPR,yDAAN,0DCE1B,uCAZF,OAaE,wBAAQJ,QAhBG,kBAAMrB,EDFI,CAAEC,KAAMP,KCkB7B,oCCrBSgC,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACI,cAAC,EAAD,O,OCAOgB,EAHKC,0BAAgB,CAClCnB,QH4Ca,WAAgD,IAA/BD,EAA8B,uDAAtBL,EAAc0B,EAAQ,uCAC5D,OAAQA,EAAO5B,MACb,KAAKP,EACH,OAAOS,EACT,KAAKR,EACH,OAAO,2BACFa,GADL,IAEEJ,KAAMyB,EAAOzB,OAEjB,KAAKR,EACH,OAAO,2BACFY,GADL,IAEEjB,OAAQiB,EAAMjB,OAASiB,EAAMJ,OAEjC,KAAKP,EACH,OAAO,2BACFW,GADL,IAEEjB,OAAQiB,EAAMjB,OAASiB,EAAMJ,OAEjC,KAAKN,EACH,OAAO,2BACFU,GADL,IAEEH,YAAawB,EAAOxB,cAExB,QACE,OAAOG,M,iCI/DPsB,EAAQC,sBAAYJ,EAAaK,8BAAoBC,0BAAgBC,IAAYC,OAEvFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.1b45aa91.chunk.js","sourcesContent":["const sleep = (n) => new Promise((resolve, reject) => setTimeout(resolve, n))\r\n\r\nexport const checkNumber = async number => { //넘버를 체크해서 프라미스를 리턴\r\n  await sleep(1000) //1초 쉬고\r\n  return new Promise((resolve, reject) => { \r\n    if(isNaN(number)) reject(`${number} is NaN`)\r\n    if(number >= 3) resolve(true)\r\n    else resolve(false)\r\n  })\r\n}","import {checkNumber} from \"../apis/checkNumber\"\r\n\r\n/* 액션 타입 */\r\nconst INIT = \"counter/INIT\"\r\nconst SET_DIFF = \"counter/SET_DIFF\"\r\nconst INCREASE = \"counter/INCREASE\"\r\nconst DECREASE = \"counter/DECREASE\"\r\n\r\n/* 숫자체크하기 프라미스 */\r\nconst CHECK_NUMBER = \"counter/CHECK_NUMBER\"\r\nconst CHECK_NUMBER_SUCCESS = \"counter/CHECK_NUMBER_SUCCESS\"\r\nconst CHECK_NUMBER_ERROR = \"counter/CHECK_NUMBER_ERROR\"\r\n\r\n/* 액션 생성함수 */\r\nexport const init = () => ({ type: INIT })\r\nexport const setDiff = (diff) => ({\r\n  type: SET_DIFF,\r\n  diff: isNaN(Number(diff)) ? 0 : Number(diff),\r\n})\r\nexport const increase = () => ({ type: INCREASE })\r\nexport const decrease = () => ({ type: DECREASE })\r\n\r\n//1초 후에 디스패치하는 thunk 함수\r\nexport const increaseAsync = () => (dispatch) => {\r\n  setTimeout(() => dispatch(increase()), 1000)\r\n}\r\nexport const decreaseAsync = () => (dispatch) => {\r\n  setTimeout(() => dispatch(decrease()), 1000)\r\n}\r\nexport const checkNumberAsync = () => async (dispatch, getState) => {\r\n  dispatch({ type: CHECK_NUMBER })\r\n  try {\r\n    console.log(getState())\r\n    const checkResult = await checkNumber(getState().counter.number)\r\n    dispatch({ type: CHECK_NUMBER_SUCCESS, checkResult })\r\n  } catch (error) {\r\n    dispatch({ type: CHECK_NUMBER_ERROR, error })\r\n  }\r\n}\r\n\r\n/* 초기상태 */\r\nconst initialState = {\r\n  number: 0,\r\n  diff: 1,\r\n  checkResult: null,\r\n}\r\n\r\n/* 리듀서 */\r\nexport default function counter(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INIT:\r\n      return initialState\r\n    case SET_DIFF:\r\n      return {\r\n        ...state,\r\n        diff: action.diff,\r\n      }\r\n    case INCREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number + state.diff,\r\n      }\r\n    case DECREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number - state.diff,\r\n      }\r\n    case CHECK_NUMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        checkResult: action.checkResult,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { checkNumberAsync, decrease, decreaseAsync, increase, increaseAsync, init, setDiff } from \"../modules/counter\"\r\n\r\nfunction CounterContainer() {\r\n  const { number } = useSelector((state) => ({ number: state.counter.number })) //rootReducer.counter.number\r\n  const { diff } = useSelector((state) => ({ diff: state.counter.diff }))\r\n  const { checkResult } = useSelector((state) => ({ checkResult: state.counter.checkResult }))\r\n\r\n  const dispatch = useDispatch()\r\n  /* const onIncrease = () => dispatch(increase())\r\n  const onDecrease = () => dispatch(decrease()) */\r\n  const onIncrease = () => dispatch(increaseAsync())\r\n  const onDecrease = () => dispatch(decreaseAsync())\r\n  const onCheck = () => dispatch(checkNumberAsync())\r\n  const onSetDiff = (e) => dispatch(setDiff(e.target.value))\r\n  const onInit = () => dispatch(init())\r\n\r\n  return (\r\n    <div className='counter'>\r\n      <div style={{ fontSzie: \"2rem\", fontWeight: \"bold\" }}>\r\n        Number : {number}\r\n      </div>\r\n      <div>\r\n        diff : <input onChange={onSetDiff} value={diff}></input>\r\n      </div>\r\n      <div>\r\n        Number is more than 3 : {checkResult ? 'true' : 'false'}\r\n      </div>\r\n      <button onClick={onIncrease}>+</button>&nbsp;\r\n      <button onClick={onDecrease}>-</button>&nbsp;\r\n      <button onClick={onCheck}>숫자 체크</button>&nbsp;\r\n      <button onClick={onInit}>초기화</button>\r\n    </div>\r\n  )\r\n}\r\nexport default CounterContainer\r\n","import './App.css';\nimport CounterContainer from './containers/CounterContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <CounterContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\"\r\nimport counter from './counter'\r\n\r\nconst rootReducer = combineReducers({\r\n  counter,\r\n})\r\nexport default rootReducer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { applyMiddleware, createStore } from \"redux\"\nimport rootReducer from \"./modules/index\"\nimport { Provider } from \"react-redux\"\nimport { composeWithDevTools } from \"redux-devtools-extension\" // 리덕스 개발자 도구\nimport logger from 'redux-logger'\nimport ReduxThunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk, logger))) // 스토어를 만듭니다.\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}